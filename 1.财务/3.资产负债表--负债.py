
import os,sys 
parentdir = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) 
sys.path.insert(0,parentdir) 

import xmind
from xmind.core.markerref import MarkerId
xmind_name="资产负债表"
w = xmind.load(os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 
s2=w.createSheet()
s2.setTitle("资产负债表--负债")
r2=s2.getRootTopic()
r2.setTitle("资产负债表--负债")

#xmind内容
content={
'负债':[
    '少有造假',
    {'看负债角度1--负债的来源':[
        '经营性负债:伴随企业经营性活动产生，包括各类应付××、应交××、预收账款',
        '分配性负债:伴随企业的盈利产生，主要指应付股利和应交所得税,亏损企业无',
        '融资性负债:长短期借款'
    ]},
    {'看负债角度2--是否承担利息':[
        '有息负债:融资性负债',
        '无息负债:经营性、分配性负债'
    ]},
    {'关注':[
        '企业的现金及现金等价物>有息负债?',
        '有息负债占总资产比例,需同行业对比'
    ]},
    {'流动负债':[
        {'向中央银行借款、吸收存款及同业存放':[
            '金融机构的特权'
        ]},
        {'应付职工薪酬':[
            '给一线员工的，计入生产成本',
            '给车间管理人员的，计入制造费用',
            '给企业管理人员的，计入管理费用',
            '给销售人员的，计入销售费用',
            '给在建工程相关人员的，计入在建工程',
            '高管变车间主任，管理费用进入生产成本，变成存货,提升公司利润',
            '注意工人工资上调多少，企业会由盈转亏'
        ]},
        {'专项应付款':[
            '政府投入的具有专项或特定用途的款项，白给的'
        ]},
        {'应付账款':[

        ]},
        {'应付票据':[
        ]},
        {'其他应付款':[
        ]},
        {'应交税费':[
        ]},
        {'递延所得税':[
        ]},
    ]}
],
'所有者权益':[
    '=总资产-总负债',
    {'四部分组成':[
        '实收资本',
        '资本公积',
        '盈余公积',
        '未分配利润'
    ]},
    {'少数股东权益':[
        '合并报表范围内的子公司，并非全部由上市公司持股，持有剩余股权的个人或法人，称为“少数股东”',
        '其股权对应的净资产，在合并资产负债表里，称为“少数股东权益”',
    ]},
    {'实收资本':[
        '股本,营业执照上的注册资金',
        '=股份总数*股票面值',
    ]},
    {'资本公积':[
        '如股票发行价30元，另外的29元是股本溢价,放入资本公积',
        '股东投入的超过股本的部分，不是由企业利润形成的',
        '可用来转增股本，不能用来分配'
    ]},
    {'盈余公积':[
        '利润里留下来，继续投入扩大再生产的钱',
        {'利润分配顺序':[
            '1.弥补以前年度亏损',
            '2.按照当年税后利润10%计提法定盈余公积',
            '3.由股东自行决定是否提取及提取多少任意盈余公积',
            '4.决定是否向股东分配'
        ]}
    ]},
    {'未分配利润':[
        '利润提取了盈余公积，剩下',
        '用途由股东自己决定',
        '不等于现金，可能已经被公司投资出去了',
    ]}
]
}

#构建xmind
xmind.build(content,r2)
topics=r2.getSubTopics()
for topic in topics:
    topic.addMarker(MarkerId.starBlue)

#保存xmind
xmind.save(w,os.path.dirname(os.path.abspath(__file__))+"\\"+xmind_name+".xmind") 